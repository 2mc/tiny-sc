#+STARTUP: showall

Demonstrate the mini-audicle-style process monitor.  This feature is superseded by Synthtree - Faders.

To show the audicle-style process monitor, type C-H-r (Control key + Function key + r).

* test organising and running sc-code in sections|
:PROPERTIES:
:ID:       485215FB-C773-4785-8503-D70AA06EC85D
:eval-id:  130
:END:

loop {
	~a = { LPF.ar(LFSaw.ar((60..90).choose.midicps, 0, 0.1), 1000) }.pla;
	[0.1, 0.2, 0.4].choose.wait;
	~a.release(0.01.exprand(5.0));
	[0.1, 0.2].choose.wait;
};

* test removing
:PROPERTIES:
:ID:       2E4A1F5A-136F-4618-9A08-E22054E48853
:eval-id:  16
:END:

~a.release(3);

* once more getting contents
:PROPERTIES:
:ID:       275EFD70-DF36-42FA-BB0F-876FE1764239
:eval-id:  10966
:END:

{ LFTri.ar(400 rrand: 1000, 0, 0.1) }.pla;

* test new yasnippets
:PROPERTIES:
:ID:       99AEE7C0-02D3-4D7E-A9BD-E2EF1CA6EAB8
:eval-id:  8
:END:

SynthDef(\babla, {
    var source;
    source = SinOsc.ar(\freq.kr(400));
    source = source * Perc();
    source.out;
}).add;

* test above synthdef
:PROPERTIES:
:ID:       D914E069-840F-4544-9EE3-8F77D10C737F
:eval-id:  9
:END:

a = Syn(\babla);
1.wait;
a release: 5;


SynthDef(\asdf, {
    var source;
    source = SinOsc.ar(\freq.kr(400));
    source = source * Adsr();

    source.out;
}).add;

SynthDef(\testing123, {
    var source;
    source = SinOsc.ar(\freq.kr(400));
    source = source * Adsr();


    source.out;
}).add;
