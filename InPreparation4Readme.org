#+STARTUP: showall
\test3.set(\amp, 0.9);
//:
\test3 fadeOut: 10;
//:

\test.set(\amp, 0.9);
\test fadeOut: 10;

//:
{ SinOsc.ar(400) } => \test;

\test.asSynthTree.buf(\test1);

\test.asSynthTree.args[\buf][\buffer].buffer;
\test.asSynthTree.args[\buf].nextValue;

Library.at(Server.default);
//:



//:
{ Sinosc.ar(400) }.chuck(\test)
.view(\freq)
.buffer(\buf, \glock); // argname, bufname!
.midi(...)
.osc(...)
.map(...)

//:
Or:
{ SinOsc.ar(400) } => \test
.view(\freq)
.buffer(\buf, \glock); // argname, bufname!
.midi(...)
.osc(...)
.map(...)


// Start an "effect" synth with an input
{ LPF.ar(In.ar(\in.kr(0)), \freq.kr(2000)) } =<> \comb;

// Send another synth to the input of the effect synth
\comb =< ({ WhiteNoise.ar } ==> \source);

\comb.set(\freq, 9500);

\comb.synth.set(\freq, 5000);

\comb.fadeOut;

\comb.start;

\comb.asSynthTree.isPlaying;
\comb.asSynthTree.synth;
\source.asSynthTree.isPlaying;
\source.asSynthTree.synth;
\comb.asSynthTree.start;

\comb.asSynthTree.synth.isPlaying;
\source.asSynthTree.synth.isPlaying;
\source.asSynthTree.synth.set(\out, 16);
\comb.asSynthTree.synth.set(\in, 16);
\comb.asSynthTree.free;

a = { LPF.ar(In.ar(\in.kr(0)), \freq.kr(2000)) }.xplay;

b = { WhiteNoise.ar }.xplay;

b.set(\out, 16);

a.set(\in, 16);



a.free;


a = { LPF.ar(In.ar(\in.kr(0)), 2000) }.xplay;

a = { In.ar(\in.kr(0)) }.xplay;

a.set(\in, 16);
a.free;

a.free;

\comb.asSynthTree.synth.set(\in, 16);
\comb.asSynthTree.synth.set(\out, 0);
#+END_EXAMPLE
