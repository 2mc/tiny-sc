#+TITLE: Tiny-sc

/Compact but powerful tools for SuperCollider, with Emacs Org-mode intergration/

(IZ Tue, 25 Feb 2014 16:20:26ff)

* Abstract

The purpose of this library is to provide simple and short solutions for some relatively complex or arduous recurring tasks in SuperCollider.  It is hoped that it will make working with SuperCollider easier, at any level.  The following sections introduce features of the library through examples.

Examples are added here after being tested.  More details about what tiny-sc sets out to do are found in file =Roadmap.org=.

* Basic synth handling

Associating symbols with synths, starting, stopping with fadeout, replacing the stored synth in the same symbol:

Try the following, one line at a time:

#+BEGIN_EXAMPLE
// Start a synth and store it in a name
{ WhiteNoise.ar } => \sound;
// Stop The sound with the default fade-out duration
\sound.fadeOut;
// Restart the stored sound - remake the synth.
\sound.start;
// Replace the synth at \sound with another one
{ SinOsc.ar(440) } => \sound;
// Replace again, fading-out the previous sound in 5 seconds
{ PinkNoise.ar } =>.5 \sound;
// Floating point durations must be given through a message
{ GrayNoise.ar(Decay.kr(Dust.kr(5))) } => \sound.fadeOut(0.5);
// Output channel can be set
\sound.set(\out, 1);
// So can the amplitude
\sound.set(\amp, 0.01);
// Fadeout with custom duration
\sound.fadeOut(5);
#+END_EXAMPLE

* Restart synths after Command-.

Add some more synths to the tree:

#+BEGIN_EXAMPLE
{ SinOsc.ar(440) } => \la;
{ SinOsc.ar(550) } => \doDiese;
{ SinOsc.ar(660) } => \mi;
#+END_EXAMPLE

Stop all synths with Command-.

Then run this to restart the synths:

#+BEGIN_EXAMPLE
SynthTree.initTree;
#+END_EXAMPLE

* Synth I/O

Example 1:  Simple patching of one source to one effect:

#+BEGIN_EXAMPLE
// Start an effects synth with a low-pass filter
{ LPF.ar(In.ar(\in.kr(0)), \freq.kr(2000)) } =<> \lpf;
// Start a WhiteNoise synth
{ WhiteNoise.ar } => \source;
// Send the noise synth to the filter
\lpf =< \source;
// Change the frequency of the low pass filter
\lpf.set(\freq, 5000);
#+END_EXAMPLE

Example 2: Several synths sending to one effect.

#+BEGIN_EXAMPLE
{ LPF.ar(In.ar(\in.kr(0)), LFNoise0.kr(40 ! 2).range(500, 4000)) } =<> \lpf;
\lpf =< ({ WhiteNoise.ar } ==> \source);
\lpf =< ({ LFPulse.ar(LFNoise0.kr(30).range(3000, 4000)) } ==> \source2);
#+END_EXAMPLE

Example 3: Changing the synths of the source and of the effect:

#+BEGIN_EXAMPLE
{ Inp.ar * Decay.kr({ Dust.kr(1) } ! 2) } =<>.5 \lpf;
\lpf =< ({ LFTri.ar(LFNoise2.kr(12).range(400, 4000)) } ==> \source2);
#+END_EXAMPLE

Confirm that the tree can be restarted after Command-. also when it contains linked synths:

#+BEGIN_EXAMPLE
SynthTree.initTree;
#+END_EXAMPLE

* GUI Views

** Views for any parameter
#+BEGIN_EXAMPLE
{ SinOsc.ar(\freq.kr(440)) } => \viewtest;
\viewtest.view(\freq).view(\amp);
#+END_EXAMPLE

** Faders for all SynthTrees

#+BEGIN_EXAMPLE
SynthTree.faders;
#+END_EXAMPLE

*** Keyboard commands on SynthTree.faders

|-----+-----------------------------------------------------------------------|
| Key | Action                                                                |
|-----+-----------------------------------------------------------------------|
| b   | On an empty slot: Open Buffer List for creating buffer-playback synth |
| k   | Open knobs window for controlling all parameters of synth             |
| g   | start synth                                                           |
| s   | stop synth                                                            |
|-----+-----------------------------------------------------------------------|

* Setting fadeTime

#+BEGIN_EXAMPLE
// Start an "effect" synth with an input
{ LPF.ar(In.ar(\in.kr(0)), \freq.kr(4000)) } =<> \lpf;
// Set fadeTime of effect:
\lpf.fadeTime = 10;
// Send a synth to the input of the effect synth
\lpf =< ({ WhiteNoise.ar } ==> \source);
// Set fadeTime of source;
\source.fadeTime = 5;
// change effect, with fadeTime stored previously
{ Inp.ar * Decay2.kr(Dust.kr(3)) } =<> \lpf;
// change source, with fadeTime stored previously
{ SinOsc.ar(2000 rrand: 3000) } ==> \source;
// change source again, With fadeTime stored previously
{ LFTri.ar(400 rrand: 800) } ==> \source;
#+END_EXAMPLE


* Buffers and samples

Play a sample laoded from disk with PlayBuf:

#+BEGIN_EXAMPLE
{ \buf.playBuf } => \bell.buf.set(\amp, 1);
#+END_EXAMPLE

Play the same sample in a different synth, with different rate

#+BEGIN_EXAMPLE
{ \buf.playBuf(rate: 1.2) } => \different.buf(\chimes).set(\amp, 1);
#+END_EXAMPLE

** BufferList autoload

Setting classvar autoload of =BufferList= to =true= will make SuperCollider load all =.aiff= and =.wav= files that are found under folder =sounds= in the SuperCollider user support directory (=Platform.userAppSupportDir=) whenever the default server boots.

** Buffer list view

Following opens a Buffer List view with all buffers loaded through selecting from a SynthTree as shown above, or put in the default "sounds" folder in User App Support Dir/SuperCollider

#+BEGIN_EXAMPLE
BufferList.showList;
#+END_EXAMPLE

Keyboard commands on the Buffer List list view:

|--------------+---------------------------------------------------|
| Key          | Action                                            |
|--------------+---------------------------------------------------|
| space        | play the selected buffer with Buffer.play         |
| return       | play/stop selected buffer in a SynthTree instance |
| shift-return | like return, but set loop to 1 (loop buffer)      |
|--------------+---------------------------------------------------|

* Triggering synths in routines
:PROPERTIES:
:DATE:     <2014-03-17 Mon 17:58>
:ID:       BD7795E1-1FAD-418D-8CF8-6A48925DA909
:eval-id:  16
:END:

Use =|> to set the source of a SynthTree without starting it.  This is necessary in cases like the following, where the starting of the synth is done explicitly by trig in a routine:

#+BEGIN_EXAMPLE
{
	var synth;
	synth = { [SinOsc, LFPulse, LFTri, LFSaw].choose.ar(\freq.kr(400)) } =|> \test;
	50 do: {
		synth.trig(\freq, 400 rrand: 1200);
		0.1.wait;
	}
}.fork
#+END_EXAMPLE

* UGen shortcuts

** =Inp.ar=

#+BEGIN_EXAMPLE
{ Inp.ar * Decay2.kr({ Dust.kr(1) } ! 2, 0.5, 2) } =<> \smooth;
\smooth =< ({ GrayNoise.ar(3) } ==> \gray);
#+END_EXAMPLE

* List of running synths and patterns

* Another way to play patterns

...

* Broadcast data events to any listening object
