Some utilities for SuperCollider and SuperCollider / Org-mode started in Feb 2014 â€” Edit

* Done:

- Adsr, Sine, Perc :: Env shortcuts
- out :: Out.ar/kr shortcut.
- Notification :: Filter "changed" notifications, add and remove notifiers.
- ProcessRegistry :: Keep track of running Nodes, Routines, Patterns.
- ProcessRegistryGui :: Display list of running processes, delete key stops selected process.
- sclang-snippets :: Shortcuts to navigate and run code blocks separated by //:
- org-sc :: Evaluate SC code in org-mode sections and babel blocks.

* Plans

Next:

Store processes under a key representing the snippet or org-mode section from which they were started.  Thus make it possible to stop or replace the processes that belong to the current snippet or org-mode section.  For sections: Use the org-id ID as id and the name of the section for display.  For snippets: Generate name if not present in =//:= header, add number if not unique.

Implementation: Pass the id of the current snippet/section to an environment variable or class variable by running code with =sc-lang-eval-string=:

#+BEGIN_SRC elisp
  (sclang-eval-string
   (concat
    "ProcessRegistry setID: "
    (org-id-get-create)))
#+END_SRC

Storing the ID-process correspondences in SC: Store each process in an instance of NamedProcess, with its snippet ID and name.

* Older Plans:

- Add to sclang-snippets:
  - Each snippet eval output is stored in list of objects, in emacs buffer,
    for access, eg. to free or pause a synth, routine, group, pattern player etc.
  - If return value is synth: store synth
  - If return value is routine: create own group for putting synths in,
    so that synths are also freed when routine is stopped?
    Possible?  Only via currentEnvironment.  Use variant of Synth.new
    to access currentEnvironment's target?
    This could be method synth of string or symbol, called in similar manner as Synth.new:
    Instead of Synth("test"), write synth("test").
  - Similar to routine, also for Pbinds.
    Check if Pbind accesses currentEnvironment to get \target value.
    If so, then implementing private group per snippet should be easy.


IZ Tue, 25 Feb 2014 16:20:26ff
