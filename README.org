#+TITLE: Tiny-sc

/Compact but powerful tools for SuperCollider, with Emacs Org-mode intergration/

(IZ Tue, 25 Feb 2014 16:20:26ff)

* Abstract

The purpose of this library is to provide simple and short solutions for some complex and arduous tasks in SuperCollider.  It is hoped that it will make working with SuperCollider easier, at any level.  The following sections introduce the features of the library through examples.

Examples are added here after being tested.  More details about what tiny-sc sets out to do are found in file =Roadmap.org=.

* Starting, fading out, restarting, exchanging synths

Associating symbols with synths, starting, stopping with fadeout, replacing the stored synth in the same symbol:

Try the following, one line at a time:

#+BEGIN_EXAMPLE
// Start a synth and store it in a name
{ WhiteNoise.ar } => \sound;
// Stop the sound with the default fade-out duration
\sound.fadeOut;
// Restart the stored sound - remake the synth.
\sound.start;
// Replace the synth at \sound with another one
{ SinOsc.ar(440) } => \sound;
// Replace again, fading-out the previous sound in 5 seconds
{ PinkNoise.ar } =>.5 \sound;
// Floating point durations must be given through a message
{ GrayNoise.ar(Decay.kr(Dust.kr(5))) } => \sound.fadeOut(0.5);
// Output channel can be set
\sound.set(\out, 1);
// So can the amplitude
\sound.set(\amp, 0.01);
// Fadeout with custom duration
\sound.fadeOut(5);
#+END_EXAMPLE

* Restart synths after Command-.

Add some more synths to the tree:

#+BEGIN_EXAMPLE
{ SinOsc.ar(440) } => \la;
{ SinOsc.ar(550) } => \doDiese;
{ SinOsc.ar(660) } => \mi;
#+END_EXAMPLE

Stop all synths with Command-.

Then run this to restart the synths:

#+BEGIN_EXAMPLE
SynthTree.initTree;
#+END_EXAMPLE

* Synth I/O linking

Example 1:  Simple patching of one source to one effect:

#+BEGIN_EXAMPLE
// Start an effects synth with a low-pass filter
{ LPF.ar(In.ar(\in.kr(0)), \freq.kr(2000)) } =<> \lpf;
// Start a WhiteNoise synth
{ WhiteNoise.ar } => \source;
// Send the noise synth to the filter
\lpf =< \source;
// Change the frequency of the low pass filter
\lpf.set(\freq, 5000);
#+END_EXAMPLE

Example 2: Several synths sending to one effect.

#+BEGIN_EXAMPLE
{ LPF.ar(In.ar(\in.kr(0)), LFNoise0.kr(10 ! 2).range(2000, 4000)) } =<> \lpf;
\lpf =< ({ WhiteNoise.ar } ==> \source);
\lpf =< ({ LFPulse.ar(LFNoise2.kr(0.2).range(300, 400)) } ==> \source2);
#+END_EXAMPLE

Example 3: Changing the synths of the source and of the effect:

#+BEGIN_EXAMPLE
{ Inp.ar * CombN.ar(Decay.kr({ Dust.kr(1) } ! 2), 0.15, 0.15, 2) } =<>.5 \lpf;
\lpf =< ({ LFTri.ar(LFNoise2.kr(12).range(400, 4000)) } ==> \source2);
#+End_example

Confirm that the tree can be restarted after Command-. also when it contains linked synths:

#+BEGIN_EXAMPLE
SynthTree.initTree;
#+END_EXAMPLE

* UGen shortcuts

** =Inp.ar=

#+BEGIN_EXAMPLE
{ Inp.ar * Decay2.kr({ Dust.kr(1) } ! 2, 0.5, 2) } =<> \smooth;
\smooth =< ({ GrayNoise.ar(3) } ==> \gray);
#+END_EXAMPLE

* Handier Function:play method

...

* ChucK-style synth access and i/o linking

(Inspired by ChucK.  http://chuck.cs.princeton.edu/).

...

* View/remove running synths and patterns from a list GUI

(Inspired by Mini-Audicle, of ChucK.  http://audicle.cs.princeton.edu/mini/)

...

* Another way to play patterns

...

* Broadcast data events to any listening object

...

* Evaluate
