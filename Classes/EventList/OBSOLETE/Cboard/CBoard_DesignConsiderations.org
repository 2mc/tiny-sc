* Goal

Give names to sources (pubs) and connect them to a panel (window with knobs).

Note: Here I start using the name Pub instead of Source, which makes the things clearer, since the Source/Pub class has an instance variable =source= which is the actual data source.  So the broadcaster (previously class =Source=)  is called Pub (short for Publish or Publisher) and =source= from now on refers to the source that produces the values and is stored inside the pub.

IZ Wed, Mar  5 2014, 17:04 EET

* Idea

: \name @= object;

Make object the source of a Pub.  If a pub exists under that =name=, then set the source of that pub, else create a new pub, store it under that name, and set its source.

Broacast this change (Pub.changed(\source, <name>, source).  CBoard listens to this.  If any CBoard window is open, it looks for a knob widget that is associated with this source. If it is not yet on the board, it allocates the first found knob element that is still free to that Pub and shows it.  Otherwise it just makes the associated element visible.

** Cboard Display elements

A CBoard displays the state of a number of pubs.  Each pub is represented by one display element.  A display element consists of a label with the name under which the pub is stored, a knob indicating the last received numeric value from the pub, but also serving to make the knob broadcast values input by the user via the pub (overriding the source of the pub), and a text field for displaying any type of object received from the pub.

A CBoard sets itself to display updates from the Pub as follows:

- If the value received is a number then do these:
  - if the value is greater than the map spec max, set the max to the value
  - if the value is smaller than the map spec min, set the max to the value
  - display the value on the knob, and print it on the text fiel

- Else, post the object in a text field underneath the knob.

** Interleaving gui input with input from other sources

Possible idea:

When a
